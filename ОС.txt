Контекст состоит их 2 частей:
1) Регистровой части;
2) Системной части;
Системная часть, которая содержит код и данные - называется пользовательским контекстом.

Потоки
Поток - упрощённый процесс.
Многопоточность - способность ОС поддерживать в рамках одного процесса несколько параллельных путей выполнения.
В рамках процесса может находится 1 или несколько потоков, которые обладают следующими характеристиками:
1) Состояние потока;.
2) Статическая память, выделяемая потоку для локальных перменных;
3) Доступ к ресурсам и памяти процесса;
4) Сохранённый контекст потока, который не выполняется;
5) Степ выполнения;
Основными состояниями потока являются: выполнение, готовность, ожидание;
С изменением состояний потока связаны следующие действия: 
1) Порождение;
2) Завершение;
3) Блокирование;
4) Разблокирование;

Типы потоков (реализация потоков):
1) Пользовательские потоки;
2) Потоки в режиме ядра;
3) Гибридные или комбинированные;
В потоках на уровне пользователя работают и управляются только процессом. Главным недостатком является то, что ОС может управлять 
процессом целиком, а не отдельными потоками.

Потоки на уровне ядра.
В данном случае все действия по управлению потоками выполняется ядром. В связи с этим отсутсвует код в процессе для управления потоком
Вместо него используется интерфейс прикладного программирования (API).
Основным недостатком является то, что при использовании потоков необходимо переключаться из режима пользователя в режим ядра.
Достоинством является управление отдельными потоками (например Windows).

Комбинированныый поток
В комбинированных системах создание потоков выполняется на уровне пользователя, там же находится код планирования и синхронизация
потоков приложений. Но несколько пользовательских потоков, которые входят в состав приложения, отоборажаются и на уровне ядра.
Solaris
// Дома написать управление процессами и потоками в Windows и Linux. Учебник Столин(ц/с/-) п.4.4 и 4.6
// Будет практическая, сначала по ОС потом по потокам

Лекция 3
Взаимодействие процессов и планирование

Взаимодействующие процессы - процессы, которые влияют на поведение друг друга путём обмена информации.
Причины взаимодействия:
1) Повышение скорости решения задач;
2) Совместное использование данных;
3) Модульная конструкция системы (микроядерная структура); 
4) Для удобства работы пользователя;
Для взаимодействия необходима адресация. Адресация бывает прямой и косвеной.
Также необходима инициализация - определение процесса. 
Рассмотрим направленность взаимодействия. (симпликсный, дуплексный, полудуплексный)
1 -> 2

1 -> 2
  <- 

Расмотрим категории средств взаимодействия:
1) Сигнальная - передаётся минимальное количество информации (1 бит);
2) Канальный - общение процессов происходит через линии связи, предоставленные ОС. 
Выделяют 2 модели передачи данных по каналам связи:
	1) Потоковая модель (ввода-вывода) - одним из самых простых методов передачи является <pipe> (труба/канал).
	В этом методе могут использоваться процессы-родственники, причём на входе может быть несколько потоков, но на выходе 1.
	Но если процессы зарегестрированы ОС, они могут участвовать в передаче данных. Если используется несколько процессов, которые
	передают данные, то используется ... fifo.
	2) Модель сообщений - процессы налогают на передаваемые данные некоторую структуру сообщений.
Кроме этих методов передачи данных, используются очереди сообщений, сокеты.
?? 3 метод - Разделяемая память - метод, когда 2 и более процесса могут совместно использовать некторую область адресного пространства
Эту область создаёт операционная система. 
Плюсы:
1) Быстрота взаимодействия
Минусы:
1) Большое влияние процессов друг на друга

Алгоритмы синхронизации
Состояние состязания (race condition)- набор процессов, которые пытаются получить одновременно доступ к ресурсу совместно.


















































